{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyM7Vw9nDn0LAW/65xORRoE6",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "549cec55fbeb4b708687460d4516e2b0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "VBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "VBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_a157b793233d4ae1b415d0be2f27a4f4",
              "IPY_MODEL_cae7fb50ef324571800d0a7244f24dd7",
              "IPY_MODEL_d499df8735db4350bc516d1190f5a3af",
              "IPY_MODEL_3e20309a22a94be0bd9a36bc6546e348",
              "IPY_MODEL_19b351a7bbc74ee9a723d666a2a0c2ad",
              "IPY_MODEL_35517ca3eb304c989fe8076f862529a2",
              "IPY_MODEL_a23b4e307aa04285b69ded2ef881e8dd",
              "IPY_MODEL_b6ef282bae6e434498576afae5c16d59"
            ],
            "layout": "IPY_MODEL_254c6df6ec7f46f290746be43c8105d9"
          }
        },
        "a157b793233d4ae1b415d0be2f27a4f4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatSliderModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "FloatSliderView",
            "continuous_update": true,
            "description": "x1",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_762c8cd3a2b64621b3b0136a841f079c",
            "max": 1,
            "min": 0,
            "orientation": "horizontal",
            "readout": true,
            "readout_format": ".2f",
            "step": 0.1,
            "style": "IPY_MODEL_cdfd4024cd584d4bafe155a0f069613f",
            "value": 0.7
          }
        },
        "cae7fb50ef324571800d0a7244f24dd7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatSliderModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "FloatSliderView",
            "continuous_update": true,
            "description": "x2",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_bcf91e3061154606b702b316c8044bdc",
            "max": 1,
            "min": 0,
            "orientation": "horizontal",
            "readout": true,
            "readout_format": ".2f",
            "step": 0.1,
            "style": "IPY_MODEL_4a5b54c180ab4299b7987981e994a576",
            "value": 0.8
          }
        },
        "d499df8735db4350bc516d1190f5a3af": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatSliderModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "FloatSliderView",
            "continuous_update": true,
            "description": "x3",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_a5370a5e42024a67a6ad89470437548b",
            "max": 1,
            "min": 0,
            "orientation": "horizontal",
            "readout": true,
            "readout_format": ".2f",
            "step": 0.1,
            "style": "IPY_MODEL_6e6f8831094d4432be357669a108c3b2",
            "value": 0.1
          }
        },
        "3e20309a22a94be0bd9a36bc6546e348": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatSliderModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "FloatSliderView",
            "continuous_update": true,
            "description": "w1",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_c9a9b83d823f440ea7bf0eb21337238c",
            "max": 1,
            "min": -1,
            "orientation": "horizontal",
            "readout": true,
            "readout_format": ".2f",
            "step": 0.1,
            "style": "IPY_MODEL_ef2dc8a634ba4d3899d958cddf99f094",
            "value": -0.3
          }
        },
        "19b351a7bbc74ee9a723d666a2a0c2ad": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatSliderModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "FloatSliderView",
            "continuous_update": true,
            "description": "w2",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_c05b0678487f40ffbd2ef74a97ce22c3",
            "max": 1,
            "min": -1,
            "orientation": "horizontal",
            "readout": true,
            "readout_format": ".2f",
            "step": 0.1,
            "style": "IPY_MODEL_99bef71bf4224c008f7cd6f1bb4c432c",
            "value": -0.6
          }
        },
        "35517ca3eb304c989fe8076f862529a2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatSliderModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "FloatSliderView",
            "continuous_update": true,
            "description": "w3",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_0bf6441c4a564a288f40f2b5b6dd070b",
            "max": 1,
            "min": -1,
            "orientation": "horizontal",
            "readout": true,
            "readout_format": ".2f",
            "step": 0.1,
            "style": "IPY_MODEL_9045ae18a7f84704a0309c331691bf3c",
            "value": 0
          }
        },
        "a23b4e307aa04285b69ded2ef881e8dd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatSliderModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "FloatSliderView",
            "continuous_update": true,
            "description": "Bias",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_c5cbdb043b6149499b9d33cced87da89",
            "max": 1,
            "min": -1,
            "orientation": "horizontal",
            "readout": true,
            "readout_format": ".2f",
            "step": 0.1,
            "style": "IPY_MODEL_9af38a30b772478f984e983991e98b51",
            "value": 0.5
          }
        },
        "b6ef282bae6e434498576afae5c16d59": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_e06f57fd95cb4c03a6d22d436267caf9",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "<Figure size 1000x500 with 2 Axes>",
                  "image/png": "\n"
                },
                "metadata": {}
              }
            ]
          }
        },
        "254c6df6ec7f46f290746be43c8105d9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "762c8cd3a2b64621b3b0136a841f079c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "cdfd4024cd584d4bafe155a0f069613f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "SliderStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": "",
            "handle_color": null
          }
        },
        "bcf91e3061154606b702b316c8044bdc": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "4a5b54c180ab4299b7987981e994a576": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "SliderStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": "",
            "handle_color": null
          }
        },
        "a5370a5e42024a67a6ad89470437548b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "6e6f8831094d4432be357669a108c3b2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "SliderStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": "",
            "handle_color": null
          }
        },
        "c9a9b83d823f440ea7bf0eb21337238c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ef2dc8a634ba4d3899d958cddf99f094": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "SliderStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": "",
            "handle_color": null
          }
        },
        "c05b0678487f40ffbd2ef74a97ce22c3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "99bef71bf4224c008f7cd6f1bb4c432c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "SliderStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": "",
            "handle_color": null
          }
        },
        "0bf6441c4a564a288f40f2b5b6dd070b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "9045ae18a7f84704a0309c331691bf3c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "SliderStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": "",
            "handle_color": null
          }
        },
        "c5cbdb043b6149499b9d33cced87da89": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "9af38a30b772478f984e983991e98b51": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "SliderStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": "",
            "handle_color": null
          }
        },
        "e06f57fd95cb4c03a6d22d436267caf9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sgevatschnaider/machine-learning/blob/main/notebooks/module_1_machine_learning_basics.ipynb%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from IPython.display import display, HTML\n",
        "\n",
        "# Solicitar al usuario el nombre del módulo\n",
        "modulo = input(\"Ingrese el nombre del módulo: \")\n",
        "\n",
        "html_content = f\"\"\"\n",
        "<!DOCTYPE html>\n",
        "<html lang=\"es\">\n",
        "<head>\n",
        "    <meta charset=\"UTF-8\">\n",
        "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
        "    <title>Material de Autoría</title>\n",
        "    <style>\n",
        "        body {{\n",
        "            font-family: Arial, sans-serif;\n",
        "            line-height: 1.6;\n",
        "            margin: 20px;\n",
        "            padding: 20px;\n",
        "            background-color: #f9f9f9;\n",
        "            color: #333;\n",
        "            text-align: center;\n",
        "        }}\n",
        "        .footer {{\n",
        "            font-size: 1.2em;\n",
        "            color: #555;\n",
        "            margin-top: 50px;\n",
        "        }}\n",
        "    </style>\n",
        "</head>\n",
        "<body>\n",
        "\n",
        "    <div class=\"footer\">\n",
        "        <p><em>Material elaborado por el profesor Sergio Gevatschnaider</em></p>\n",
        "        <p><em>Material adicional clases Educación IT</em></p>\n",
        "        <p><strong>Módulo:</strong> {modulo}</p>\n",
        "    </div>\n",
        "\n",
        "</body>\n",
        "</html>\n",
        "\"\"\"\n",
        "\n",
        "display(HTML(html_content))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 212
        },
        "id": "qrc5Gr8DHoZw",
        "outputId": "37923d92-5a5d-4c25-cc5c-a9ee723e1c89"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Ingrese el nombre del módulo: 1\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "<!DOCTYPE html>\n",
              "<html lang=\"es\">\n",
              "<head>\n",
              "    <meta charset=\"UTF-8\">\n",
              "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
              "    <title>Material de Autoría</title>\n",
              "    <style>\n",
              "        body {\n",
              "            font-family: Arial, sans-serif;\n",
              "            line-height: 1.6;\n",
              "            margin: 20px;\n",
              "            padding: 20px;\n",
              "            background-color: #f9f9f9;\n",
              "            color: #333;\n",
              "            text-align: center;\n",
              "        }\n",
              "        .footer {\n",
              "            font-size: 1.2em;\n",
              "            color: #555;\n",
              "            margin-top: 50px;\n",
              "        }\n",
              "    </style>\n",
              "</head>\n",
              "<body>\n",
              "\n",
              "    <div class=\"footer\">\n",
              "        <p><em>Material elaborado por el profesor Sergio Gevatschnaider</em></p>\n",
              "        <p><em>Material adicional clases Educación IT</em></p>\n",
              "        <p><strong>Módulo:</strong> 1</p>\n",
              "    </div>\n",
              "\n",
              "</body>\n",
              "</html>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from IPython.display import display, HTML\n",
        "\n",
        "html_content = \"\"\"\n",
        "<!DOCTYPE html>\n",
        "<html lang=\"es\">\n",
        "<head>\n",
        "    <meta charset=\"UTF-8\">\n",
        "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
        "    <title>Introducción al Machine Learning</title>\n",
        "    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\">\n",
        "    <style>\n",
        "        body {\n",
        "            font-family: 'Roboto', Arial, sans-serif;\n",
        "            line-height: 1.8;\n",
        "            margin: 20px;\n",
        "            padding: 20px;\n",
        "            background-color: #f9f9f9;\n",
        "            color: #333;\n",
        "        }\n",
        "        h1, h2, h3 {\n",
        "            color: #2c3e50;\n",
        "        }\n",
        "        h1 {\n",
        "            font-size: 2.5em;\n",
        "            text-align: center;\n",
        "            margin-bottom: 20px;\n",
        "        }\n",
        "        h2 {\n",
        "            font-size: 2em;\n",
        "            margin-top: 40px;\n",
        "            color: #2980b9;\n",
        "        }\n",
        "        p {\n",
        "            font-size: 1.2em;\n",
        "            margin-bottom: 15px;\n",
        "        }\n",
        "        ul {\n",
        "            list-style-type: square;\n",
        "            margin-left: 30px;\n",
        "            margin-bottom: 20px;\n",
        "        }\n",
        "        .highlight {\n",
        "            background-color: #ffeb3b;\n",
        "            padding: 2px 5px;\n",
        "            border-radius: 3px;\n",
        "            font-weight: bold;\n",
        "        }\n",
        "    </style>\n",
        "</head>\n",
        "<body>\n",
        "\n",
        "    <h1>Introducción al Machine Learning</h1>\n",
        "\n",
        "    <h2>1. ¿Qué es el Machine Learning?</h2>\n",
        "    <p>El Machine Learning, o aprendizaje automático, permite a las máquinas generalizar conocimiento a partir de datos y experiencias previas. Con el incremento del poder de cómputo y el manejo de datos, las máquinas pueden \"aprender\" de manera más eficiente.</p>\n",
        "\n",
        "    <h2>2. Importancia del Aprendizaje en Máquinas</h2>\n",
        "    <p>El aprendizaje automático transforma la forma en que interactuamos con los datos y las tareas, permitiendo a las máquinas resolver problemas complejos a través de experiencias previas.</p>\n",
        "\n",
        "    <h2>3. Primeros Algoritmos de Machine Learning</h2>\n",
        "    <ul>\n",
        "        <li><strong>Sistemas Expertos:</strong> Bases de conocimientos que aplican reglas de inferencia para resolver problemas específicos.</li>\n",
        "        <li><strong>Árbol de Decisión:</strong> Modelo de decisiones estructuradas en forma de árbol, donde cada nodo representa una pregunta o decisión.</li>\n",
        "        <li><strong>Algoritmo de Vecinos Más Cercanos (k-NN):</strong> Clasificación de instancias según la categoría de sus vecinos más cercanos.</li>\n",
        "        <li><strong>Perceptrón Simple:</strong> Basado en redes neuronales, con entradas ponderadas y una función de activación que proporciona una salida final.</li>\n",
        "    </ul>\n",
        "\n",
        "    <h2>4. Aplicaciones de la Inteligencia Artificial</h2>\n",
        "    <p>La IA se aplica en múltiples áreas, revolucionando campos y optimizando procesos:</p>\n",
        "    <ul>\n",
        "        <li><strong>Marketing:</strong> Personalización y análisis de comportamiento.</li>\n",
        "        <li><strong>Seguridad Informática:</strong> Detección de amenazas y análisis de riesgos.</li>\n",
        "        <li><strong>Sociedad:</strong> Impacto en el bienestar social y la ética.</li>\n",
        "        <li><strong>Desarrollo de Software:</strong> Automatización de pruebas y análisis de código.</li>\n",
        "        <li><strong>Robótica:</strong> Control y aprendizaje en sistemas autónomos.</li>\n",
        "        <li><strong>Medicina:</strong> Diagnóstico asistido y análisis de grandes volúmenes de datos clínicos.</li>\n",
        "        <li><strong>Industria:</strong> Optimización de procesos de producción y mantenimiento predictivo.</li>\n",
        "        <li><strong>Análisis y Clasificación de Datos:</strong> Procesamiento de grandes volúmenes de información.</li>\n",
        "        <li><strong>Predicción de Comportamiento:</strong> Análisis predictivo para toma de decisiones.</li>\n",
        "        <li><strong>Reconocimiento de Patrones:</strong> Identificación de tendencias en los datos.</li>\n",
        "        <li><strong>Conceptualización:</strong> Modelado de conceptos complejos para su aplicación práctica.</li>\n",
        "    </ul>\n",
        "\n",
        "    <h2>5. Conclusión</h2>\n",
        "    <p>El Machine Learning permite avances significativos en tecnología y sociedad. Continuemos explorando su potencial y superando sus desafíos.</p>\n",
        "\n",
        "    <h2>6. Lab Time</h2>\n",
        "    <p>Ejercicio práctico para aplicar los conceptos y algoritmos aprendidos en el módulo.</p>\n",
        "\n",
        "</body>\n",
        "</html>\n",
        "\"\"\"\n",
        "\n",
        "# Mostrar el contenido HTML en Colab\n",
        "display(HTML(html_content))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "dvEaz7oNU4US",
        "outputId": "acd2c2a8-1a45-401f-fded-7de47b2ea176"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "<!DOCTYPE html>\n",
              "<html lang=\"es\">\n",
              "<head>\n",
              "    <meta charset=\"UTF-8\">\n",
              "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
              "    <title>Introducción al Machine Learning</title>\n",
              "    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\">\n",
              "    <style>\n",
              "        body {\n",
              "            font-family: 'Roboto', Arial, sans-serif;\n",
              "            line-height: 1.8;\n",
              "            margin: 20px;\n",
              "            padding: 20px;\n",
              "            background-color: #f9f9f9;\n",
              "            color: #333;\n",
              "        }\n",
              "        h1, h2, h3 {\n",
              "            color: #2c3e50;\n",
              "        }\n",
              "        h1 {\n",
              "            font-size: 2.5em;\n",
              "            text-align: center;\n",
              "            margin-bottom: 20px;\n",
              "        }\n",
              "        h2 {\n",
              "            font-size: 2em;\n",
              "            margin-top: 40px;\n",
              "            color: #2980b9;\n",
              "        }\n",
              "        p {\n",
              "            font-size: 1.2em;\n",
              "            margin-bottom: 15px;\n",
              "        }\n",
              "        ul {\n",
              "            list-style-type: square;\n",
              "            margin-left: 30px;\n",
              "            margin-bottom: 20px;\n",
              "        }\n",
              "        .highlight {\n",
              "            background-color: #ffeb3b;\n",
              "            padding: 2px 5px;\n",
              "            border-radius: 3px;\n",
              "            font-weight: bold;\n",
              "        }\n",
              "    </style>\n",
              "</head>\n",
              "<body>\n",
              "\n",
              "    <h1>Introducción al Machine Learning</h1>\n",
              "\n",
              "    <h2>1. ¿Qué es el Machine Learning?</h2>\n",
              "    <p>El Machine Learning, o aprendizaje automático, permite a las máquinas generalizar conocimiento a partir de datos y experiencias previas. Con el incremento del poder de cómputo y el manejo de datos, las máquinas pueden \"aprender\" de manera más eficiente.</p>\n",
              "\n",
              "    <h2>2. Importancia del Aprendizaje en Máquinas</h2>\n",
              "    <p>El aprendizaje automático transforma la forma en que interactuamos con los datos y las tareas, permitiendo a las máquinas resolver problemas complejos a través de experiencias previas.</p>\n",
              "\n",
              "    <h2>3. Primeros Algoritmos de Machine Learning</h2>\n",
              "    <ul>\n",
              "        <li><strong>Sistemas Expertos:</strong> Bases de conocimientos que aplican reglas de inferencia para resolver problemas específicos.</li>\n",
              "        <li><strong>Árbol de Decisión:</strong> Modelo de decisiones estructuradas en forma de árbol, donde cada nodo representa una pregunta o decisión.</li>\n",
              "        <li><strong>Algoritmo de Vecinos Más Cercanos (k-NN):</strong> Clasificación de instancias según la categoría de sus vecinos más cercanos.</li>\n",
              "        <li><strong>Perceptrón Simple:</strong> Basado en redes neuronales, con entradas ponderadas y una función de activación que proporciona una salida final.</li>\n",
              "    </ul>\n",
              "\n",
              "    <h2>4. Aplicaciones de la Inteligencia Artificial</h2>\n",
              "    <p>La IA se aplica en múltiples áreas, revolucionando campos y optimizando procesos:</p>\n",
              "    <ul>\n",
              "        <li><strong>Marketing:</strong> Personalización y análisis de comportamiento.</li>\n",
              "        <li><strong>Seguridad Informática:</strong> Detección de amenazas y análisis de riesgos.</li>\n",
              "        <li><strong>Sociedad:</strong> Impacto en el bienestar social y la ética.</li>\n",
              "        <li><strong>Desarrollo de Software:</strong> Automatización de pruebas y análisis de código.</li>\n",
              "        <li><strong>Robótica:</strong> Control y aprendizaje en sistemas autónomos.</li>\n",
              "        <li><strong>Medicina:</strong> Diagnóstico asistido y análisis de grandes volúmenes de datos clínicos.</li>\n",
              "        <li><strong>Industria:</strong> Optimización de procesos de producción y mantenimiento predictivo.</li>\n",
              "        <li><strong>Análisis y Clasificación de Datos:</strong> Procesamiento de grandes volúmenes de información.</li>\n",
              "        <li><strong>Predicción de Comportamiento:</strong> Análisis predictivo para toma de decisiones.</li>\n",
              "        <li><strong>Reconocimiento de Patrones:</strong> Identificación de tendencias en los datos.</li>\n",
              "        <li><strong>Conceptualización:</strong> Modelado de conceptos complejos para su aplicación práctica.</li>\n",
              "    </ul>\n",
              "\n",
              "    <h2>5. Conclusión</h2>\n",
              "    <p>El Machine Learning permite avances significativos en tecnología y sociedad. Continuemos explorando su potencial y superando sus desafíos.</p>\n",
              "\n",
              "    <h2>6. Lab Time</h2>\n",
              "    <p>Ejercicio práctico para aplicar los conceptos y algoritmos aprendidos en el módulo.</p>\n",
              "\n",
              "</body>\n",
              "</html>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from IPython.display import display, HTML\n",
        "\n",
        "html_content = \"\"\"\n",
        "<!DOCTYPE html>\n",
        "<html lang=\"es\">\n",
        "<head>\n",
        "    <meta charset=\"UTF-8\">\n",
        "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
        "    <title>Árbol de Decisión en Machine Learning</title>\n",
        "    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\">\n",
        "    <style>\n",
        "        body {\n",
        "            font-family: 'Roboto', Arial, sans-serif;\n",
        "            line-height: 1.8;\n",
        "            margin: 20px;\n",
        "            padding: 20px;\n",
        "            background-color: #f9f9f9;\n",
        "            color: #333;\n",
        "        }\n",
        "        h1, h2, h3 {\n",
        "            color: #2c3e50;\n",
        "        }\n",
        "        h1 {\n",
        "            font-size: 2.5em;\n",
        "            text-align: center;\n",
        "            margin-bottom: 20px;\n",
        "        }\n",
        "        h2 {\n",
        "            font-size: 2em;\n",
        "            margin-top: 40px;\n",
        "            color: #2980b9;\n",
        "        }\n",
        "        p {\n",
        "            font-size: 1.2em;\n",
        "            margin-bottom: 15px;\n",
        "        }\n",
        "        ul {\n",
        "            list-style-type: square;\n",
        "            margin-left: 30px;\n",
        "            margin-bottom: 20px;\n",
        "        }\n",
        "        .highlight {\n",
        "            background-color: #ffeb3b;\n",
        "            padding: 2px 5px;\n",
        "            border-radius: 3px;\n",
        "            font-weight: bold;\n",
        "        }\n",
        "    </style>\n",
        "</head>\n",
        "<body>\n",
        "\n",
        "    <h1>Árbol de Decisión en Machine Learning</h1>\n",
        "\n",
        "    <h2>¿Qué es un Árbol de Decisión?</h2>\n",
        "    <p>Un <strong>árbol de decisión</strong> es un modelo de aprendizaje automático utilizado para tareas de clasificación y regresión. Se estructura como un árbol, donde cada nodo interno representa una <span class=\"highlight\">decisión basada en una característica</span> de los datos, y cada rama representa el resultado de esa decisión. Los nodos terminales o <em>hojas</em> indican el resultado o la categoría final.</p>\n",
        "\n",
        "    <h2>¿Cómo Funciona un Árbol de Decisión?</h2>\n",
        "    <p>El árbol de decisión divide iterativamente los datos en subconjuntos basados en valores de características. En cada paso, selecciona la característica que mejor separa los datos según una métrica de <strong>impureza</strong>, como la <em>entropía</em> o el <em>índice de Gini</em>. El proceso continúa hasta que se cumpla un criterio de parada, como una profundidad máxima o un número mínimo de muestras por hoja.</p>\n",
        "\n",
        "    <h2>Métricas Utilizadas para la Divisón</h2>\n",
        "    <ul>\n",
        "        <li><strong>Entropía:</strong> Mide el desorden o la impureza de los datos. Una menor entropía indica una mayor pureza en los nodos.</li>\n",
        "        <li><strong>Índice de Gini:</strong> Es una medida de impureza que evalúa la probabilidad de que un elemento sea clasificado incorrectamente. Un índice de Gini más bajo indica una mejor división.</li>\n",
        "    </ul>\n",
        "\n",
        "    <h2>Ejemplo de un Árbol de Decisión</h2>\n",
        "    <p>Supongamos que estamos construyendo un árbol de decisión para predecir si una persona comprará o no un producto. Las características podrían incluir el <strong>nivel de ingresos</strong> y la <strong>edad</strong>. El árbol se divide en función de estas características, estableciendo reglas como:</p>\n",
        "    <ul>\n",
        "        <li>Si el nivel de ingresos es alto, entonces es más probable que compre el producto.</li>\n",
        "        <li>Si el nivel de ingresos es medio y la edad es superior a 30 años, entonces es menos probable que compre el producto.</li>\n",
        "    </ul>\n",
        "    <p>Estas reglas se establecen automáticamente en función de los datos, y el árbol aprende a clasificar o predecir basándose en ellas.</p>\n",
        "\n",
        "    <h2>Ventajas y Desventajas de los Árboles de Decisión</h2>\n",
        "    <ul>\n",
        "        <li><strong>Ventajas:</strong>\n",
        "            <ul>\n",
        "                <li>Fáciles de interpretar y visualizar.</li>\n",
        "                <li>No requieren normalización de datos.</li>\n",
        "                <li>Pueden manejar datos categóricos y numéricos.</li>\n",
        "            </ul>\n",
        "        </li>\n",
        "        <li><strong>Desventajas:</strong>\n",
        "            <ul>\n",
        "                <li>Propensos a sobreajustarse si no se limitan adecuadamente.</li>\n",
        "                <li>Sensibles a pequeñas variaciones en los datos.</li>\n",
        "                <li>Pueden ser ineficaces para datos complejos sin ajustes adecuados.</li>\n",
        "            </ul>\n",
        "        </li>\n",
        "    </ul>\n",
        "\n",
        "    <h2>Aplicaciones Comunes de los Árboles de Decisión</h2>\n",
        "    <p>Los árboles de decisión son ampliamente utilizados en diversas áreas debido a su simplicidad y efectividad. Algunas aplicaciones comunes incluyen:</p>\n",
        "    <ul>\n",
        "        <li>Clasificación de clientes en marketing.</li>\n",
        "        <li>Diagnóstico médico para identificar enfermedades.</li>\n",
        "        <li>Detección de fraude en finanzas.</li>\n",
        "        <li>Análisis de riesgo en seguros.</li>\n",
        "    </ul>\n",
        "\n",
        "</body>\n",
        "</html>\n",
        "\"\"\"\n",
        "\n",
        "# Mostrar el contenido HTML en Colab o Jupyter Notebook\n",
        "display(HTML(html_content))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "EDRX2EasWt96",
        "outputId": "1eaafe79-d0ab-4986-9da2-cede55dd5ae7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "<!DOCTYPE html>\n",
              "<html lang=\"es\">\n",
              "<head>\n",
              "    <meta charset=\"UTF-8\">\n",
              "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
              "    <title>Árbol de Decisión en Machine Learning</title>\n",
              "    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\">\n",
              "    <style>\n",
              "        body {\n",
              "            font-family: 'Roboto', Arial, sans-serif;\n",
              "            line-height: 1.8;\n",
              "            margin: 20px;\n",
              "            padding: 20px;\n",
              "            background-color: #f9f9f9;\n",
              "            color: #333;\n",
              "        }\n",
              "        h1, h2, h3 {\n",
              "            color: #2c3e50;\n",
              "        }\n",
              "        h1 {\n",
              "            font-size: 2.5em;\n",
              "            text-align: center;\n",
              "            margin-bottom: 20px;\n",
              "        }\n",
              "        h2 {\n",
              "            font-size: 2em;\n",
              "            margin-top: 40px;\n",
              "            color: #2980b9;\n",
              "        }\n",
              "        p {\n",
              "            font-size: 1.2em;\n",
              "            margin-bottom: 15px;\n",
              "        }\n",
              "        ul {\n",
              "            list-style-type: square;\n",
              "            margin-left: 30px;\n",
              "            margin-bottom: 20px;\n",
              "        }\n",
              "        .highlight {\n",
              "            background-color: #ffeb3b;\n",
              "            padding: 2px 5px;\n",
              "            border-radius: 3px;\n",
              "            font-weight: bold;\n",
              "        }\n",
              "    </style>\n",
              "</head>\n",
              "<body>\n",
              "\n",
              "    <h1>Árbol de Decisión en Machine Learning</h1>\n",
              "\n",
              "    <h2>¿Qué es un Árbol de Decisión?</h2>\n",
              "    <p>Un <strong>árbol de decisión</strong> es un modelo de aprendizaje automático utilizado para tareas de clasificación y regresión. Se estructura como un árbol, donde cada nodo interno representa una <span class=\"highlight\">decisión basada en una característica</span> de los datos, y cada rama representa el resultado de esa decisión. Los nodos terminales o <em>hojas</em> indican el resultado o la categoría final.</p>\n",
              "\n",
              "    <h2>¿Cómo Funciona un Árbol de Decisión?</h2>\n",
              "    <p>El árbol de decisión divide iterativamente los datos en subconjuntos basados en valores de características. En cada paso, selecciona la característica que mejor separa los datos según una métrica de <strong>impureza</strong>, como la <em>entropía</em> o el <em>índice de Gini</em>. El proceso continúa hasta que se cumpla un criterio de parada, como una profundidad máxima o un número mínimo de muestras por hoja.</p>\n",
              "\n",
              "    <h2>Métricas Utilizadas para la Divisón</h2>\n",
              "    <ul>\n",
              "        <li><strong>Entropía:</strong> Mide el desorden o la impureza de los datos. Una menor entropía indica una mayor pureza en los nodos.</li>\n",
              "        <li><strong>Índice de Gini:</strong> Es una medida de impureza que evalúa la probabilidad de que un elemento sea clasificado incorrectamente. Un índice de Gini más bajo indica una mejor división.</li>\n",
              "    </ul>\n",
              "\n",
              "    <h2>Ejemplo de un Árbol de Decisión</h2>\n",
              "    <p>Supongamos que estamos construyendo un árbol de decisión para predecir si una persona comprará o no un producto. Las características podrían incluir el <strong>nivel de ingresos</strong> y la <strong>edad</strong>. El árbol se divide en función de estas características, estableciendo reglas como:</p>\n",
              "    <ul>\n",
              "        <li>Si el nivel de ingresos es alto, entonces es más probable que compre el producto.</li>\n",
              "        <li>Si el nivel de ingresos es medio y la edad es superior a 30 años, entonces es menos probable que compre el producto.</li>\n",
              "    </ul>\n",
              "    <p>Estas reglas se establecen automáticamente en función de los datos, y el árbol aprende a clasificar o predecir basándose en ellas.</p>\n",
              "\n",
              "    <h2>Ventajas y Desventajas de los Árboles de Decisión</h2>\n",
              "    <ul>\n",
              "        <li><strong>Ventajas:</strong>\n",
              "            <ul>\n",
              "                <li>Fáciles de interpretar y visualizar.</li>\n",
              "                <li>No requieren normalización de datos.</li>\n",
              "                <li>Pueden manejar datos categóricos y numéricos.</li>\n",
              "            </ul>\n",
              "        </li>\n",
              "        <li><strong>Desventajas:</strong>\n",
              "            <ul>\n",
              "                <li>Propensos a sobreajustarse si no se limitan adecuadamente.</li>\n",
              "                <li>Sensibles a pequeñas variaciones en los datos.</li>\n",
              "                <li>Pueden ser ineficaces para datos complejos sin ajustes adecuados.</li>\n",
              "            </ul>\n",
              "        </li>\n",
              "    </ul>\n",
              "\n",
              "    <h2>Aplicaciones Comunes de los Árboles de Decisión</h2>\n",
              "    <p>Los árboles de decisión son ampliamente utilizados en diversas áreas debido a su simplicidad y efectividad. Algunas aplicaciones comunes incluyen:</p>\n",
              "    <ul>\n",
              "        <li>Clasificación de clientes en marketing.</li>\n",
              "        <li>Diagnóstico médico para identificar enfermedades.</li>\n",
              "        <li>Detección de fraude en finanzas.</li>\n",
              "        <li>Análisis de riesgo en seguros.</li>\n",
              "    </ul>\n",
              "\n",
              "</body>\n",
              "</html>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from graphviz import Digraph\n",
        "from IPython.display import Image\n",
        "\n",
        "# Crear el objeto Digraph\n",
        "dot = Digraph()\n",
        "\n",
        "# Definir nodos del árbol con las condiciones y las acciones\n",
        "dot.node('A', 'Número de unidades solicitadas')\n",
        "dot.node('B', '>=10')\n",
        "dot.node('C', 'De 1 a 10\\nAplicar 0% descuento')\n",
        "dot.node('D', '>50')\n",
        "dot.node('E', 'De 10 a 50')\n",
        "dot.node('F', 'Envío España\\nAplicar 50% descuento')\n",
        "dot.node('G', 'Envío Europa\\nAplicar 25% descuento')\n",
        "dot.node('H', 'Envío España\\nAplicar 20% descuento')\n",
        "dot.node('I', 'Envío Europa\\nAplicar 10% descuento')\n",
        "\n",
        "# Crear aristas que conectan los nodos\n",
        "dot.edge('A', 'B', '>=10')\n",
        "dot.edge('A', 'C', 'De 1 a 10')\n",
        "dot.edge('B', 'D', '>50')\n",
        "dot.edge('B', 'E', 'De 10 a 50')\n",
        "dot.edge('D', 'F', 'Envío España')\n",
        "dot.edge('D', 'G', 'Envío Europa')\n",
        "dot.edge('E', 'H', 'Envío España')\n",
        "dot.edge('E', 'I', 'Envío Europa')\n",
        "\n",
        "# Renderizar y visualizar el árbol directamente en la celda\n",
        "dot.format = 'png'\n",
        "dot.render('decision_tree')\n",
        "\n",
        "# Mostrar la imagen generada\n",
        "Image(filename='decision_tree.png')\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 471
        },
        "id": "SJZECGbSVWYN",
        "outputId": "918bd839-e6b3-4bfe-9111-7fefb95d636f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "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ioqKL7/8UkdHR0NDw83Nbe3atYQQY2PjR48evfFyDVtorHerV6+mevfee+89f/784MGDmpqahJBevXotXryYWuqNw+FMmjSp6TJWrVqlra2tpaU1depUaqEzS0vLzMzMd6385cuXQ4cO5fP5ysrKPXv2XLNmjUQiqdeXxo5p7H7u3LmT+jNSV1f38vLavXt3vX7JZLI9e/b07duXxWKxWCwnJ6fff/+94WGxsbG9evVis9lubm55eXkt6PIbT4mIiHhrl2mUk5MzZswYDofzzz//0F0LALQNhkwm69icCAAAiignJ+fjjz++d+/e8uXL16xZU2+WCADoFCQSyYEDB9asWaOjoxMUFOTk5ER3RQDQNjBoDgAAhBDSs2fP8PBwf3//ffv2mZub+/n5CQQCuosCgOaSSCR//fWXtbX1N998M3/+/MePHyOzAXQlGG0DAID/UVRUtGPHjj179qioqMyePXvhwoXU84oAoJhev3596NChffv25ebmzpgxY+3atebm5nQXBQBtDLENAADeoKioiPpFMDs7e/jw4b6+vt7e3nhyEkBx1NTUXL58+c8//wwNDeVwOHPmzFm4cCECG0BXhdgGAACNkkgkly5d+uuvvy5evKisrPz+++97eHhMnDiRWjULADpeaWnplStXQkJCLl++XFpaOmLEiM8//3zq1KnULDUA0FUhtgEAwNsVFxcHBwdfvHjx2rVrIpFowIABHh4enp6eTk5O8pWsAKD9pKWlhYSEXLx4MSIiQiaTubm5TZw4cerUqb169aK7NADoCIhtAADwDkQi0Y0bN0JCQkJDQ7Ozsw0NDUeMGOHm5jZ8+HA7OzssDwXQhtLT0yMiIiIiIsLDw589e8bn88eNG+fp6Tlu3Dg+n093dQDQoRDbAACgJWQyWVxc3L///hsZGRkVFVVeXs7n811dXYcNGzZs2DBnZ2dVVVW6awToZKRSaWJiYnh4eGRkZHh4eE5ODovFcnFxGTZs2AcffODm5qaiokJ3jQBAD8Q2AABordra2oSEBGpYIDIyMi8vj81mOzo6Ojk59e/f38nJyd7eXk1Nje4yARRObW1tampqXFxcXFxcbGxsbGxsaWmppqamq6srNYjt4uLCZDLpLhMA6IfYBgAAbSw1NTUqKurBgwdxcXEJCQmVlZWqqqr29vZUhHNycnJwcFBXV6e7TAAaVFdX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\n",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def calcular_descuento(unidades, destino):\n",
        "    \"\"\"\n",
        "    Calcula el porcentaje de descuento basado en el número de unidades y el destino de envío.\n",
        "\n",
        "    Parámetros:\n",
        "    unidades (int): Número de unidades solicitadas.\n",
        "    destino (str): Destino de envío, puede ser \"España\" o \"Europa\".\n",
        "\n",
        "    Retorna:\n",
        "    str: Mensaje con el descuento aplicado.\n",
        "    \"\"\"\n",
        "\n",
        "    # Nodo raíz del árbol\n",
        "    if unidades >= 10:\n",
        "        # Rama para unidades >= 10\n",
        "        if unidades > 50:\n",
        "            # Rama para unidades > 50\n",
        "            if destino.lower() == \"españa\":\n",
        "                return \"Aplicar 50% descuento\"\n",
        "            elif destino.lower() == \"europa\":\n",
        "                return \"Aplicar 25% descuento\"\n",
        "        else:\n",
        "            # Rama para unidades entre 10 y 50\n",
        "            if destino.lower() == \"españa\":\n",
        "                return \"Aplicar 20% descuento\"\n",
        "            elif destino.lower() == \"europa\":\n",
        "                return \"Aplicar 10% descuento\"\n",
        "    else:\n",
        "        # Rama para unidades entre 1 y 10\n",
        "        return \"Aplicar 0% descuento\"\n",
        "\n",
        "# Solicitar entradas del usuario\n",
        "try:\n",
        "    unidades = int(input(\"Ingrese el número de unidades solicitadas: \"))\n",
        "    destino = input(\"Ingrese el destino de envío (España o Europa): \")\n",
        "\n",
        "    # Llamar a la función y mostrar el resultado\n",
        "    resultado = calcular_descuento(unidades, destino)\n",
        "    print(resultado)\n",
        "except ValueError:\n",
        "    print(\"Por favor, ingrese un número válido para las unidades.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qzAc46EPWHA7",
        "outputId": "2d1096eb-fe59-4627-a979-b6d39a2b9760"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese el número de unidades solicitadas: 20\n",
            "Ingrese el destino de envío (España o Europa): españa\n",
            "Aplicar 20% descuento\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from IPython.display import display, HTML\n",
        "\n",
        "html_content = \"\"\"\n",
        "<!DOCTYPE html>\n",
        "<html lang=\"es\">\n",
        "<head>\n",
        "    <meta charset=\"UTF-8\">\n",
        "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
        "    <title>Algoritmo k-Vecinos Más Cercanos (k-NN)</title>\n",
        "    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\">\n",
        "    <style>\n",
        "        body {\n",
        "            font-family: 'Roboto', Arial, sans-serif;\n",
        "            line-height: 1.8;\n",
        "            margin: 20px;\n",
        "            padding: 20px;\n",
        "            background-color: #f9f9f9;\n",
        "            color: #333;\n",
        "        }\n",
        "        h1, h2, h3 {\n",
        "            color: #2c3e50;\n",
        "        }\n",
        "        h1 {\n",
        "            font-size: 2.5em;\n",
        "            text-align: center;\n",
        "            margin-bottom: 20px;\n",
        "        }\n",
        "        h2 {\n",
        "            font-size: 2em;\n",
        "            margin-top: 40px;\n",
        "            color: #2980b9;\n",
        "        }\n",
        "        p {\n",
        "            font-size: 1.2em;\n",
        "            margin-bottom: 15px;\n",
        "        }\n",
        "        ul {\n",
        "            list-style-type: square;\n",
        "            margin-left: 30px;\n",
        "            margin-bottom: 20px;\n",
        "        }\n",
        "        .highlight {\n",
        "            background-color: #ffeb3b;\n",
        "            padding: 2px 5px;\n",
        "            border-radius: 3px;\n",
        "            font-weight: bold;\n",
        "        }\n",
        "    </style>\n",
        "</head>\n",
        "<body>\n",
        "\n",
        "    <h1>Algoritmo k-Vecinos Más Cercanos (k-NN)</h1>\n",
        "\n",
        "    <h2>¿Qué es el Algoritmo k-NN?</h2>\n",
        "    <p>El <strong>algoritmo k-vecinos más cercanos</strong> (k-NN, por sus siglas en inglés) es un método de <span class=\"highlight\">aprendizaje supervisado</span> usado en problemas de <strong>clasificación</strong> y <strong>regresión</strong>. En clasificación, el algoritmo asigna una clase a un nuevo punto basándose en las clases de sus <em>k vecinos más cercanos</em> en el espacio de características.</p>\n",
        "\n",
        "    <h2>¿Cómo Funciona k-NN?</h2>\n",
        "    <p>El funcionamiento básico del k-NN es el siguiente:</p>\n",
        "    <ul>\n",
        "        <li>Se elige un valor de <strong>k</strong>, que representa el número de vecinos a considerar.</li>\n",
        "        <li>Para cada nuevo punto, el algoritmo busca los <strong>k puntos más cercanos</strong> en el conjunto de datos de entrenamiento.</li>\n",
        "        <li>Si es un problema de <strong>clasificación</strong>, el nuevo punto se clasifica en la clase más común entre sus k vecinos.</li>\n",
        "        <li>Si es un problema de <strong>regresión</strong>, el valor del nuevo punto es el promedio de los valores de sus k vecinos.</li>\n",
        "    </ul>\n",
        "\n",
        "    <h2>Distancia en k-NN</h2>\n",
        "    <p>Para determinar la cercanía entre puntos, el algoritmo k-NN usa una métrica de <strong>distancia</strong>. La más común es la <em>distancia Euclidiana</em>, pero también se pueden usar otras, como la <em>distancia de Manhattan</em> o la <em>distancia de Minkowski</em>. La distancia Euclidiana se define como:</p>\n",
        "    <p style=\"font-style: italic; text-align: center;\">distancia(a, b) = √((x2 - x1)² + (y2 - y1)²)</p>\n",
        "\n",
        "    <h2>Elección del Valor de k</h2>\n",
        "    <p>El valor de <strong>k</strong> es crucial para el rendimiento del algoritmo:</p>\n",
        "    <ul>\n",
        "        <li>Si <strong>k</strong> es demasiado pequeño, el modelo puede ser <span class=\"highlight\">sensible al ruido</span> y tenderá a sobreajustarse.</li>\n",
        "        <li>Si <strong>k</strong> es demasiado grande, el modelo puede ser <span class=\"highlight\">demasiado general</span> y perder precisión, ya que incluirá puntos lejanos que no son relevantes.</li>\n",
        "    </ul>\n",
        "\n",
        "    <h2>Ventajas y Desventajas de k-NN</h2>\n",
        "    <ul>\n",
        "        <li><strong>Ventajas:</strong>\n",
        "            <ul>\n",
        "                <li>Fácil de implementar e interpretar.</li>\n",
        "                <li>No requiere entrenamiento explícito.</li>\n",
        "                <li>Flexible y se puede aplicar tanto a problemas de clasificación como de regresión.</li>\n",
        "            </ul>\n",
        "        </li>\n",
        "        <li><strong>Desventajas:</strong>\n",
        "            <ul>\n",
        "                <li>La eficiencia disminuye en conjuntos de datos grandes.</li>\n",
        "                <li>Sensible a la escala de los datos, por lo que es importante normalizar.</li>\n",
        "                <li>El rendimiento depende de la elección de k y de la métrica de distancia.</li>\n",
        "            </ul>\n",
        "        </li>\n",
        "    </ul>\n",
        "\n",
        "    <h2>Aplicaciones Comunes de k-NN</h2>\n",
        "    <p>El algoritmo k-NN se utiliza ampliamente en diversas áreas, entre las que destacan:</p>\n",
        "    <ul>\n",
        "        <li>Reconocimiento de patrones y clasificación de imágenes.</li>\n",
        "        <li>Diagnóstico médico para clasificación de enfermedades.</li>\n",
        "        <li>Clasificación de clientes en marketing.</li>\n",
        "        <li>Detección de anomalías en seguridad informática.</li>\n",
        "    </ul>\n",
        "\n",
        "</body>\n",
        "</html>\n",
        "\"\"\"\n",
        "\n",
        "# Mostrar el contenido HTML en Google Colab o Jupyter Notebook\n",
        "display(HTML(html_content))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "AKuiH-bIYsRT",
        "outputId": "17e46783-e476-41f5-db2f-606a8e180fbb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "<!DOCTYPE html>\n",
              "<html lang=\"es\">\n",
              "<head>\n",
              "    <meta charset=\"UTF-8\">\n",
              "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
              "    <title>Algoritmo k-Vecinos Más Cercanos (k-NN)</title>\n",
              "    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\">\n",
              "    <style>\n",
              "        body {\n",
              "            font-family: 'Roboto', Arial, sans-serif;\n",
              "            line-height: 1.8;\n",
              "            margin: 20px;\n",
              "            padding: 20px;\n",
              "            background-color: #f9f9f9;\n",
              "            color: #333;\n",
              "        }\n",
              "        h1, h2, h3 {\n",
              "            color: #2c3e50;\n",
              "        }\n",
              "        h1 {\n",
              "            font-size: 2.5em;\n",
              "            text-align: center;\n",
              "            margin-bottom: 20px;\n",
              "        }\n",
              "        h2 {\n",
              "            font-size: 2em;\n",
              "            margin-top: 40px;\n",
              "            color: #2980b9;\n",
              "        }\n",
              "        p {\n",
              "            font-size: 1.2em;\n",
              "            margin-bottom: 15px;\n",
              "        }\n",
              "        ul {\n",
              "            list-style-type: square;\n",
              "            margin-left: 30px;\n",
              "            margin-bottom: 20px;\n",
              "        }\n",
              "        .highlight {\n",
              "            background-color: #ffeb3b;\n",
              "            padding: 2px 5px;\n",
              "            border-radius: 3px;\n",
              "            font-weight: bold;\n",
              "        }\n",
              "    </style>\n",
              "</head>\n",
              "<body>\n",
              "\n",
              "    <h1>Algoritmo k-Vecinos Más Cercanos (k-NN)</h1>\n",
              "\n",
              "    <h2>¿Qué es el Algoritmo k-NN?</h2>\n",
              "    <p>El <strong>algoritmo k-vecinos más cercanos</strong> (k-NN, por sus siglas en inglés) es un método de <span class=\"highlight\">aprendizaje supervisado</span> usado en problemas de <strong>clasificación</strong> y <strong>regresión</strong>. En clasificación, el algoritmo asigna una clase a un nuevo punto basándose en las clases de sus <em>k vecinos más cercanos</em> en el espacio de características.</p>\n",
              "\n",
              "    <h2>¿Cómo Funciona k-NN?</h2>\n",
              "    <p>El funcionamiento básico del k-NN es el siguiente:</p>\n",
              "    <ul>\n",
              "        <li>Se elige un valor de <strong>k</strong>, que representa el número de vecinos a considerar.</li>\n",
              "        <li>Para cada nuevo punto, el algoritmo busca los <strong>k puntos más cercanos</strong> en el conjunto de datos de entrenamiento.</li>\n",
              "        <li>Si es un problema de <strong>clasificación</strong>, el nuevo punto se clasifica en la clase más común entre sus k vecinos.</li>\n",
              "        <li>Si es un problema de <strong>regresión</strong>, el valor del nuevo punto es el promedio de los valores de sus k vecinos.</li>\n",
              "    </ul>\n",
              "\n",
              "    <h2>Distancia en k-NN</h2>\n",
              "    <p>Para determinar la cercanía entre puntos, el algoritmo k-NN usa una métrica de <strong>distancia</strong>. La más común es la <em>distancia Euclidiana</em>, pero también se pueden usar otras, como la <em>distancia de Manhattan</em> o la <em>distancia de Minkowski</em>. La distancia Euclidiana se define como:</p>\n",
              "    <p style=\"font-style: italic; text-align: center;\">distancia(a, b) = √((x2 - x1)² + (y2 - y1)²)</p>\n",
              "\n",
              "    <h2>Elección del Valor de k</h2>\n",
              "    <p>El valor de <strong>k</strong> es crucial para el rendimiento del algoritmo:</p>\n",
              "    <ul>\n",
              "        <li>Si <strong>k</strong> es demasiado pequeño, el modelo puede ser <span class=\"highlight\">sensible al ruido</span> y tenderá a sobreajustarse.</li>\n",
              "        <li>Si <strong>k</strong> es demasiado grande, el modelo puede ser <span class=\"highlight\">demasiado general</span> y perder precisión, ya que incluirá puntos lejanos que no son relevantes.</li>\n",
              "    </ul>\n",
              "\n",
              "    <h2>Ventajas y Desventajas de k-NN</h2>\n",
              "    <ul>\n",
              "        <li><strong>Ventajas:</strong>\n",
              "            <ul>\n",
              "                <li>Fácil de implementar e interpretar.</li>\n",
              "                <li>No requiere entrenamiento explícito.</li>\n",
              "                <li>Flexible y se puede aplicar tanto a problemas de clasificación como de regresión.</li>\n",
              "            </ul>\n",
              "        </li>\n",
              "        <li><strong>Desventajas:</strong>\n",
              "            <ul>\n",
              "                <li>La eficiencia disminuye en conjuntos de datos grandes.</li>\n",
              "                <li>Sensible a la escala de los datos, por lo que es importante normalizar.</li>\n",
              "                <li>El rendimiento depende de la elección de k y de la métrica de distancia.</li>\n",
              "            </ul>\n",
              "        </li>\n",
              "    </ul>\n",
              "\n",
              "    <h2>Aplicaciones Comunes de k-NN</h2>\n",
              "    <p>El algoritmo k-NN se utiliza ampliamente en diversas áreas, entre las que destacan:</p>\n",
              "    <ul>\n",
              "        <li>Reconocimiento de patrones y clasificación de imágenes.</li>\n",
              "        <li>Diagnóstico médico para clasificación de enfermedades.</li>\n",
              "        <li>Clasificación de clientes en marketing.</li>\n",
              "        <li>Detección de anomalías en seguridad informática.</li>\n",
              "    </ul>\n",
              "\n",
              "</body>\n",
              "</html>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "# Configuración de la figura\n",
        "fig, ax = plt.subplots()\n",
        "\n",
        "# Generar datos de dos clases (representados por cuadrados y triángulos)\n",
        "np.random.seed(0)\n",
        "class_1 = np.random.randn(10, 2) * 1.2 + [2, 2]  # Clase azul\n",
        "class_2 = np.random.randn(10, 2) * 1.2 + [4, 4]  # Clase roja\n",
        "\n",
        "# Punto nuevo (el punto verde en el centro)\n",
        "new_point = np.array([3, 3])\n",
        "\n",
        "# Dibujar puntos de las clases\n",
        "ax.scatter(class_1[:, 0], class_1[:, 1], color='blue', marker='s', s=100, label=\"Clase Azul\")\n",
        "ax.scatter(class_2[:, 0], class_2[:, 1], color='red', marker='^', s=100, label=\"Clase Roja\")\n",
        "\n",
        "# Dibujar el punto nuevo\n",
        "ax.scatter(new_point[0], new_point[1], color='green', marker='o', s=150, label=\"Punto Nuevo\", edgecolor='black')\n",
        "\n",
        "# Dibujar círculos para representar la distancia (k-vecinos)\n",
        "circle1 = plt.Circle(new_point, 1.5, color='black', linestyle='--', linewidth=1, fill=False)\n",
        "circle2 = plt.Circle(new_point, 3, color='black', linestyle='--', linewidth=1, fill=False)\n",
        "ax.add_artist(circle1)\n",
        "ax.add_artist(circle2)\n",
        "\n",
        "# Configuración de la visualización\n",
        "ax.set_aspect('equal', 'box')\n",
        "plt.xlim(0, 6)\n",
        "plt.ylim(0, 6)\n",
        "plt.title(\"Vecinos más cercanos o k-vecinos\")\n",
        "plt.xlabel(\"Característica 1\")\n",
        "plt.ylabel(\"Característica 2\")\n",
        "plt.legend()\n",
        "plt.grid(False)\n",
        "\n",
        "# Mostrar la imagen\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "fxXDHgyEXDuF",
        "outputId": "587ed2c6-5e86-4066-a8da-e06e45abf948"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "\n",
        "# Generación de datos de dos clases\n",
        "np.random.seed(0)\n",
        "class_1 = np.random.randn(10, 2) * 1.2 + [2, 2]  # Clase azul\n",
        "class_2 = np.random.randn(10, 2) * 1.2 + [4, 4]  # Clase roja\n",
        "\n",
        "# Nuevo punto (punto verde en el centro)\n",
        "new_point = np.array([[3, 3]])\n",
        "\n",
        "# Concatenar los datos y etiquetas\n",
        "X = np.vstack((class_1, class_2))\n",
        "y = np.array([0] * 10 + [1] * 10)  # 0 = Clase azul, 1 = Clase roja\n",
        "\n",
        "# Crear y entrenar el clasificador k-NN con k=5\n",
        "knn = KNeighborsClassifier(n_neighbors=3)\n",
        "knn.fit(X, y)\n",
        "\n",
        "# Predicción de la clase del nuevo punto\n",
        "predicted_class = knn.predict(new_point)\n",
        "\n",
        "# Visualización de los datos y la predicción\n",
        "plt.figure(figsize=(8, 8))\n",
        "plt.scatter(class_1[:, 0], class_1[:, 1], color='blue', marker='s', s=100, label=\"Clase Azul\")\n",
        "plt.scatter(class_2[:, 0], class_2[:, 1], color='red', marker='^', s=100, label=\"Clase Roja\")\n",
        "plt.scatter(new_point[0, 0], new_point[0, 1], color='green', marker='o', s=150, label=\"Punto Nuevo\", edgecolor='black')\n",
        "\n",
        "# Dibujar un círculo que cubra los 5 vecinos más cercanos\n",
        "neighbors = knn.kneighbors(new_point, 3, return_distance=False)\n",
        "for neighbor in neighbors[0]:\n",
        "    plt.plot([new_point[0, 0], X[neighbor][0]], [new_point[0, 1], X[neighbor][1]], 'k--')\n",
        "\n",
        "plt.title(\"Clasificación K=5: Punto Nuevo clasificado como \" + (\"Rojo\" if predicted_class[0] == 1 else \"Azul\"))\n",
        "plt.xlabel(\"Característica 1\")\n",
        "plt.ylabel(\"Característica 2\")\n",
        "plt.legend()\n",
        "plt.grid(False)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 718
        },
        "id": "Kdsfnzb2XkPg",
        "outputId": "f9cd32bd-098f-43a6-b771-cde3b39877c8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Crear y entrenar el clasificador k-NN con k=3\n",
        "knn_k3 = KNeighborsClassifier(n_neighbors=3)\n",
        "knn_k3.fit(X, y)\n",
        "\n",
        "# Predicción de la clase del nuevo punto\n",
        "predicted_class_k3 = knn_k3.predict(new_point)\n",
        "\n",
        "# Visualización de los datos y la predicción\n",
        "plt.figure(figsize=(8, 8))\n",
        "plt.scatter(class_1[:, 0], class_1[:, 1], color='blue', marker='s', s=100, label=\"Clase Azul\")\n",
        "plt.scatter(class_2[:, 0], class_2[:, 1], color='red', marker='^', s=100, label=\"Clase Roja\")\n",
        "plt.scatter(new_point[0, 0], new_point[0, 1], color='green', marker='o', s=150, label=\"Punto Nuevo\", edgecolor='black')\n",
        "\n",
        "# Dibujar un círculo que cubra los 3 vecinos más cercanos\n",
        "neighbors_k3 = knn_k3.kneighbors(new_point, 3, return_distance=False)\n",
        "for neighbor in neighbors_k3[0]:\n",
        "    plt.plot([new_point[0, 0], X[neighbor][0]], [new_point[0, 1], X[neighbor][1]], 'k--')\n",
        "\n",
        "plt.title(\"Clasificación K=3: Punto Nuevo clasificado como \" + (\"Rojo\" if predicted_class_k3[0] == 1 else \"Azul\"))\n",
        "plt.xlabel(\"Característica 1\")\n",
        "plt.ylabel(\"Característica 2\")\n",
        "plt.legend()\n",
        "plt.grid(False)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 718
        },
        "id": "yW0QTsz7XnHX",
        "outputId": "aa23ea2c-9400-471a-8be6-d6ba129a52b8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from IPython.display import display, HTML\n",
        "\n",
        "html_content = \"\"\"\n",
        "<!DOCTYPE html>\n",
        "<html lang=\"es\">\n",
        "<head>\n",
        "    <meta charset=\"UTF-8\">\n",
        "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
        "    <title>Perceptrón en Machine Learning</title>\n",
        "    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\">\n",
        "    <style>\n",
        "        body {\n",
        "            font-family: 'Roboto', Arial, sans-serif;\n",
        "            line-height: 1.8;\n",
        "            margin: 20px;\n",
        "            padding: 20px;\n",
        "            background-color: #f9f9f9;\n",
        "            color: #333;\n",
        "        }\n",
        "        h1, h2, h3 {\n",
        "            color: #2c3e50;\n",
        "        }\n",
        "        h1 {\n",
        "            font-size: 2.5em;\n",
        "            text-align: center;\n",
        "            margin-bottom: 20px;\n",
        "        }\n",
        "        h2 {\n",
        "            font-size: 2em;\n",
        "            margin-top: 40px;\n",
        "            color: #2980b9;\n",
        "        }\n",
        "        p {\n",
        "            font-size: 1.2em;\n",
        "            margin-bottom: 15px;\n",
        "        }\n",
        "        ul {\n",
        "            list-style-type: square;\n",
        "            margin-left: 30px;\n",
        "            margin-bottom: 20px;\n",
        "        }\n",
        "        .highlight {\n",
        "            background-color: #ffeb3b;\n",
        "            padding: 2px 5px;\n",
        "            border-radius: 3px;\n",
        "            font-weight: bold;\n",
        "        }\n",
        "    </style>\n",
        "</head>\n",
        "<body>\n",
        "\n",
        "    <h1>El Perceptrón en Machine Learning</h1>\n",
        "\n",
        "    <h2>¿Qué es un Perceptrón?</h2>\n",
        "    <p>El <strong>perceptrón</strong> es uno de los modelos más básicos de una <span class=\"highlight\">neurona artificial</span> en el campo del <em>aprendizaje automático</em> y las <strong>redes neuronales</strong>. Fue desarrollado en los años 50 y 60 como una forma de emular cómo funcionan las neuronas en el cerebro humano. A pesar de su simplicidad, el perceptrón sentó las bases para las redes neuronales modernas.</p>\n",
        "\n",
        "    <h2>¿Cómo Funciona el Perceptrón?</h2>\n",
        "    <p>Un perceptrón toma varias entradas, cada una de las cuales está ponderada por un peso. Estas entradas ponderadas se suman, y la suma pasa a través de una <strong>función de activación</strong> para producir una salida. El proceso se puede dividir en los siguientes pasos:</p>\n",
        "    <ul>\n",
        "        <li><strong>Entradas (X):</strong> Son los datos o características que se le dan al perceptrón.</li>\n",
        "        <li><strong>Pesos (W):</strong> Cada entrada tiene un peso asociado que indica su importancia.</li>\n",
        "        <li><strong>Sesgo (bias):</strong> Un valor constante que permite ajustar la función de activación.</li>\n",
        "        <li><strong>Suma Ponderada:</strong> Se calcula sumando cada entrada multiplicada por su peso y luego agregando el sesgo.</li>\n",
        "        <li><strong>Función de Activación:</strong> Toma la suma ponderada y determina la salida final del perceptrón.</li>\n",
        "    </ul>\n",
        "\n",
        "    <h2>Fórmula del Perceptrón</h2>\n",
        "    <p>Matemáticamente, el perceptrón se representa como:</p>\n",
        "    <p style=\"text-align: center; font-style: italic;\">z = (X<sub>1</sub> * W<sub>1</sub>) + (X<sub>2</sub> * W<sub>2</sub>) + ... + (X<sub>n</sub> * W<sub>n</sub>) + bias</p>\n",
        "    <p>La salida final del perceptrón es:</p>\n",
        "    <p style=\"text-align: center; font-style: italic;\">Salida = f(z)</p>\n",
        "    <p>donde <em>f</em> es la función de activación. Un ejemplo común de función de activación es la <strong>función escalón</strong>, que produce una salida binaria (0 o 1) dependiendo del valor de <em>z</em>.</p>\n",
        "\n",
        "    <h2>Función de Activación</h2>\n",
        "    <p>La función de activación es crucial en el perceptrón. Algunos tipos comunes de funciones de activación son:</p>\n",
        "    <ul>\n",
        "        <li><strong>Función Escalón:</strong> Da una salida de 1 si el valor de entrada es mayor o igual a cero, y 0 en caso contrario.</li>\n",
        "        <li><strong>Función Sigmoide:</strong> Una función suave que produce un rango de salida entre 0 y 1, útil para problemas probabilísticos.</li>\n",
        "        <li><strong>Función ReLU (Rectified Linear Unit):</strong> Devuelve el valor de entrada si es positivo, o 0 si es negativo. Es ampliamente utilizada en redes neuronales profundas.</li>\n",
        "    </ul>\n",
        "\n",
        "    <h2>Aprendizaje en el Perceptrón</h2>\n",
        "    <p>El perceptrón es capaz de \"aprender\" ajustando sus pesos a través de un proceso iterativo. Durante el entrenamiento, el modelo ajusta los pesos para reducir el error en sus predicciones. El algoritmo de aprendizaje básico del perceptrón es:</p>\n",
        "    <ul>\n",
        "        <li>Inicializar los pesos con valores aleatorios.</li>\n",
        "        <li>Para cada ejemplo en el conjunto de datos:\n",
        "            <ul>\n",
        "                <li>Calcular la salida del perceptrón.</li>\n",
        "                <li>Comparar la salida con el valor esperado (etiqueta).</li>\n",
        "                <li>Ajustar los pesos si la salida es incorrecta.</li>\n",
        "            </ul>\n",
        "        </li>\n",
        "    </ul>\n",
        "\n",
        "    <h2>Limitaciones del Perceptrón</h2>\n",
        "    <p>A pesar de su importancia histórica, el perceptrón tiene limitaciones. Es un modelo de aprendizaje <strong>lineal</strong>, lo que significa que solo puede resolver problemas que son linealmente separables. Por ejemplo, no puede resolver problemas complejos como el <em>problema XOR</em>. Para superar esta limitación, se utilizan <strong>perceptrones multicapa</strong> en redes neuronales más complejas.</p>\n",
        "\n",
        "    <h2>Aplicaciones del Perceptrón</h2>\n",
        "    <p>El perceptrón se utiliza en tareas de clasificación simples, como:</p>\n",
        "    <ul>\n",
        "        <li>Clasificación binaria, por ejemplo, spam vs. no spam.</li>\n",
        "        <li>Detección de patrones simples en conjuntos de datos.</li>\n",
        "        <li>Reconocimiento de formas básicas en procesamiento de imágenes.</li>\n",
        "    </ul>\n",
        "\n",
        "    <h2>Resumen</h2>\n",
        "    <p>El perceptrón es la unidad fundamental de las redes neuronales artificiales y fue uno de los primeros modelos de aprendizaje automático. Aunque tiene limitaciones, es un concepto clave que sirve como base para modelos de redes neuronales más avanzados.</p>\n",
        "\n",
        "</body>\n",
        "</html>\n",
        "\"\"\"\n",
        "\n",
        "# Mostrar el contenido HTML en Google Colab o Jupyter Notebook\n",
        "display(HTML(html_content))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "q3lBTxBQZ6PD",
        "outputId": "ede8f681-9f5f-4388-e3aa-0735b6429d0f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "<!DOCTYPE html>\n",
              "<html lang=\"es\">\n",
              "<head>\n",
              "    <meta charset=\"UTF-8\">\n",
              "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
              "    <title>Perceptrón en Machine Learning</title>\n",
              "    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\">\n",
              "    <style>\n",
              "        body {\n",
              "            font-family: 'Roboto', Arial, sans-serif;\n",
              "            line-height: 1.8;\n",
              "            margin: 20px;\n",
              "            padding: 20px;\n",
              "            background-color: #f9f9f9;\n",
              "            color: #333;\n",
              "        }\n",
              "        h1, h2, h3 {\n",
              "            color: #2c3e50;\n",
              "        }\n",
              "        h1 {\n",
              "            font-size: 2.5em;\n",
              "            text-align: center;\n",
              "            margin-bottom: 20px;\n",
              "        }\n",
              "        h2 {\n",
              "            font-size: 2em;\n",
              "            margin-top: 40px;\n",
              "            color: #2980b9;\n",
              "        }\n",
              "        p {\n",
              "            font-size: 1.2em;\n",
              "            margin-bottom: 15px;\n",
              "        }\n",
              "        ul {\n",
              "            list-style-type: square;\n",
              "            margin-left: 30px;\n",
              "            margin-bottom: 20px;\n",
              "        }\n",
              "        .highlight {\n",
              "            background-color: #ffeb3b;\n",
              "            padding: 2px 5px;\n",
              "            border-radius: 3px;\n",
              "            font-weight: bold;\n",
              "        }\n",
              "    </style>\n",
              "</head>\n",
              "<body>\n",
              "\n",
              "    <h1>El Perceptrón en Machine Learning</h1>\n",
              "\n",
              "    <h2>¿Qué es un Perceptrón?</h2>\n",
              "    <p>El <strong>perceptrón</strong> es uno de los modelos más básicos de una <span class=\"highlight\">neurona artificial</span> en el campo del <em>aprendizaje automático</em> y las <strong>redes neuronales</strong>. Fue desarrollado en los años 50 y 60 como una forma de emular cómo funcionan las neuronas en el cerebro humano. A pesar de su simplicidad, el perceptrón sentó las bases para las redes neuronales modernas.</p>\n",
              "\n",
              "    <h2>¿Cómo Funciona el Perceptrón?</h2>\n",
              "    <p>Un perceptrón toma varias entradas, cada una de las cuales está ponderada por un peso. Estas entradas ponderadas se suman, y la suma pasa a través de una <strong>función de activación</strong> para producir una salida. El proceso se puede dividir en los siguientes pasos:</p>\n",
              "    <ul>\n",
              "        <li><strong>Entradas (X):</strong> Son los datos o características que se le dan al perceptrón.</li>\n",
              "        <li><strong>Pesos (W):</strong> Cada entrada tiene un peso asociado que indica su importancia.</li>\n",
              "        <li><strong>Sesgo (bias):</strong> Un valor constante que permite ajustar la función de activación.</li>\n",
              "        <li><strong>Suma Ponderada:</strong> Se calcula sumando cada entrada multiplicada por su peso y luego agregando el sesgo.</li>\n",
              "        <li><strong>Función de Activación:</strong> Toma la suma ponderada y determina la salida final del perceptrón.</li>\n",
              "    </ul>\n",
              "\n",
              "    <h2>Fórmula del Perceptrón</h2>\n",
              "    <p>Matemáticamente, el perceptrón se representa como:</p>\n",
              "    <p style=\"text-align: center; font-style: italic;\">z = (X<sub>1</sub> * W<sub>1</sub>) + (X<sub>2</sub> * W<sub>2</sub>) + ... + (X<sub>n</sub> * W<sub>n</sub>) + bias</p>\n",
              "    <p>La salida final del perceptrón es:</p>\n",
              "    <p style=\"text-align: center; font-style: italic;\">Salida = f(z)</p>\n",
              "    <p>donde <em>f</em> es la función de activación. Un ejemplo común de función de activación es la <strong>función escalón</strong>, que produce una salida binaria (0 o 1) dependiendo del valor de <em>z</em>.</p>\n",
              "\n",
              "    <h2>Función de Activación</h2>\n",
              "    <p>La función de activación es crucial en el perceptrón. Algunos tipos comunes de funciones de activación son:</p>\n",
              "    <ul>\n",
              "        <li><strong>Función Escalón:</strong> Da una salida de 1 si el valor de entrada es mayor o igual a cero, y 0 en caso contrario.</li>\n",
              "        <li><strong>Función Sigmoide:</strong> Una función suave que produce un rango de salida entre 0 y 1, útil para problemas probabilísticos.</li>\n",
              "        <li><strong>Función ReLU (Rectified Linear Unit):</strong> Devuelve el valor de entrada si es positivo, o 0 si es negativo. Es ampliamente utilizada en redes neuronales profundas.</li>\n",
              "    </ul>\n",
              "\n",
              "    <h2>Aprendizaje en el Perceptrón</h2>\n",
              "    <p>El perceptrón es capaz de \"aprender\" ajustando sus pesos a través de un proceso iterativo. Durante el entrenamiento, el modelo ajusta los pesos para reducir el error en sus predicciones. El algoritmo de aprendizaje básico del perceptrón es:</p>\n",
              "    <ul>\n",
              "        <li>Inicializar los pesos con valores aleatorios.</li>\n",
              "        <li>Para cada ejemplo en el conjunto de datos:\n",
              "            <ul>\n",
              "                <li>Calcular la salida del perceptrón.</li>\n",
              "                <li>Comparar la salida con el valor esperado (etiqueta).</li>\n",
              "                <li>Ajustar los pesos si la salida es incorrecta.</li>\n",
              "            </ul>\n",
              "        </li>\n",
              "    </ul>\n",
              "\n",
              "    <h2>Limitaciones del Perceptrón</h2>\n",
              "    <p>A pesar de su importancia histórica, el perceptrón tiene limitaciones. Es un modelo de aprendizaje <strong>lineal</strong>, lo que significa que solo puede resolver problemas que son linealmente separables. Por ejemplo, no puede resolver problemas complejos como el <em>problema XOR</em>. Para superar esta limitación, se utilizan <strong>perceptrones multicapa</strong> en redes neuronales más complejas.</p>\n",
              "\n",
              "    <h2>Aplicaciones del Perceptrón</h2>\n",
              "    <p>El perceptrón se utiliza en tareas de clasificación simples, como:</p>\n",
              "    <ul>\n",
              "        <li>Clasificación binaria, por ejemplo, spam vs. no spam.</li>\n",
              "        <li>Detección de patrones simples en conjuntos de datos.</li>\n",
              "        <li>Reconocimiento de formas básicas en procesamiento de imágenes.</li>\n",
              "    </ul>\n",
              "\n",
              "    <h2>Resumen</h2>\n",
              "    <p>El perceptrón es la unidad fundamental de las redes neuronales artificiales y fue uno de los primeros modelos de aprendizaje automático. Aunque tiene limitaciones, es un concepto clave que sirve como base para modelos de redes neuronales más avanzados.</p>\n",
              "\n",
              "</body>\n",
              "</html>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from ipywidgets import interact, FloatSlider\n",
        "\n",
        "# Definir la función de activación escalón\n",
        "def activacion_escalon(x):\n",
        "    return 1 if x >= 0 else 0\n",
        "\n",
        "# Implementación del perceptrón simple\n",
        "def perceptron_simple(X, W, b):\n",
        "    # Sumarización ponderada de las entradas\n",
        "    z = np.dot(X, W) + b  # X*W + b\n",
        "    # Aplicar la función de activación\n",
        "    salida = activacion_escalon(z)\n",
        "    return z, salida\n",
        "\n",
        "# Función para actualizar la visualización\n",
        "def actualizar_vista(x1, x2, x3, w1, w2, w3, b):\n",
        "    X = np.array([x1, x2, x3])\n",
        "    W = np.array([w1, w2, w3])\n",
        "\n",
        "    # Obtener la suma ponderada y la salida\n",
        "    z, salida = perceptron_simple(X, W, b)\n",
        "\n",
        "    # Visualizar\n",
        "    plt.figure(figsize=(10, 5))\n",
        "\n",
        "    # Gráfico de la suma ponderada\n",
        "    plt.subplot(1, 2, 1)\n",
        "    plt.bar(['x1*w1', 'x2*w2', 'x3*w3', 'Bias'], [X[0]*W[0], X[1]*W[1], X[2]*W[2], b], color=['blue', 'orange', 'green', 'red'])\n",
        "    plt.title(f\"Suma Ponderada: z = {z:.2f}\")\n",
        "    plt.ylabel(\"Valor\")\n",
        "\n",
        "    # Gráfico de la salida del perceptrón\n",
        "    plt.subplot(1, 2, 2)\n",
        "    plt.bar(['Salida'], [salida], color=['purple' if salida == 1 else 'gray'])\n",
        "    plt.title(f\"Salida del Perceptrón: {salida}\")\n",
        "    plt.ylim(0, 1.5)\n",
        "\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "# Widgets interactivos para ajustar valores\n",
        "interact(\n",
        "    actualizar_vista,\n",
        "    x1=FloatSlider(value=1.0, min=0, max=1, step=0.1, description='x1'),\n",
        "    x2=FloatSlider(value=0.0, min=0, max=1, step=0.1, description='x2'),\n",
        "    x3=FloatSlider(value=1.0, min=0, max=1, step=0.1, description='x3'),\n",
        "    w1=FloatSlider(value=0.5, min=-1, max=1, step=0.1, description='w1'),\n",
        "    w2=FloatSlider(value=-0.6, min=-1, max=1, step=0.1, description='w2'),\n",
        "    w3=FloatSlider(value=0.8, min=-1, max=1, step=0.1, description='w3'),\n",
        "    b=FloatSlider(value=-0.1, min=-1, max=1, step=0.1, description='Bias')\n",
        ")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 818,
          "referenced_widgets": [
            "549cec55fbeb4b708687460d4516e2b0",
            "a157b793233d4ae1b415d0be2f27a4f4",
            "cae7fb50ef324571800d0a7244f24dd7",
            "d499df8735db4350bc516d1190f5a3af",
            "3e20309a22a94be0bd9a36bc6546e348",
            "19b351a7bbc74ee9a723d666a2a0c2ad",
            "35517ca3eb304c989fe8076f862529a2",
            "a23b4e307aa04285b69ded2ef881e8dd",
            "b6ef282bae6e434498576afae5c16d59",
            "254c6df6ec7f46f290746be43c8105d9",
            "762c8cd3a2b64621b3b0136a841f079c",
            "cdfd4024cd584d4bafe155a0f069613f",
            "bcf91e3061154606b702b316c8044bdc",
            "4a5b54c180ab4299b7987981e994a576",
            "a5370a5e42024a67a6ad89470437548b",
            "6e6f8831094d4432be357669a108c3b2",
            "c9a9b83d823f440ea7bf0eb21337238c",
            "ef2dc8a634ba4d3899d958cddf99f094",
            "c05b0678487f40ffbd2ef74a97ce22c3",
            "99bef71bf4224c008f7cd6f1bb4c432c",
            "0bf6441c4a564a288f40f2b5b6dd070b",
            "9045ae18a7f84704a0309c331691bf3c",
            "c5cbdb043b6149499b9d33cced87da89",
            "9af38a30b772478f984e983991e98b51",
            "e06f57fd95cb4c03a6d22d436267caf9"
          ]
        },
        "id": "Tq_Wy3neZXsk",
        "outputId": "101b7860-21bb-4e20-ea84-920464a8e549"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "interactive(children=(FloatSlider(value=1.0, description='x1', max=1.0), FloatSlider(value=0.0, description='x…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "549cec55fbeb4b708687460d4516e2b0"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<function __main__.actualizar_vista(x1, x2, x3, w1, w2, w3, b)>"
            ],
            "text/html": [
              "<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n",
              "      pre.function-repr-contents {\n",
              "        overflow-x: auto;\n",
              "        padding: 8px 12px;\n",
              "        max-height: 500px;\n",
              "      }\n",
              "\n",
              "      pre.function-repr-contents.function-repr-contents-collapsed {\n",
              "        cursor: pointer;\n",
              "        max-height: 100px;\n",
              "      }\n",
              "    </style>\n",
              "    <pre style=\"white-space: initial; background:\n",
              "         var(--colab-secondary-surface-color); padding: 8px 12px;\n",
              "         border-bottom: 1px solid var(--colab-border-color);\"><b>actualizar_vista</b><br/>def actualizar_vista(x1, x2, x3, w1, w2, w3, b)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/content/&lt;ipython-input-1-b94ecb29b0c5&gt;</a>&lt;no docstring&gt;</pre></div>"
            ]
          },
          "metadata": {},
          "execution_count": 1
        }
      ]
    }
  ]
}